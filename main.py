
import json

import requests
import telebot
from telebot import types


bot = telebot.TeleBot('5946513884:AAGkl2MPaJ5sK0BRYsbWkY6PV23JJBF1-aU')
API = '709e3cbe105d05f7bfdb27403929d3bc'

# –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫
weather_mapping = {
    'clear sky': '—è—Å–Ω–æ',
    'few clouds': '–º–∞–ª–æ–æ–±–ª–∞—á–Ω–æ',
    'scattered clouds': '—Ä–∞—Å—Å–µ—è–Ω–Ω—ã–µ –æ–±–ª–∞–∫–∞',
    'overcast clouds': '–∑–∞—Ç—è–Ω—É—Ç–æ –æ–±–ª–∞–∫–∞–º–∏',
    'broken clouds': '–æ–±–ª–∞—á–Ω–æ',
    'shower rain': '–ª–∏–≤–µ–Ω—å',
    'rain': '–¥–æ–∂–¥—å',
    'thunderstorm': '–≥—Ä–æ–∑–∞',
    'snow': '—Å–Ω–µ–≥',
    'mist': '—Ç—É–º–∞–Ω',
    'haze': '–ª—ë–≥–∫–∏–π —Ç—É–º–∞–Ω',
    'light rain': '–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å',
    'light intensity shower rain': '–ª–∏–≤–µ–Ω—å —Å –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å—é —Å–≤–µ—Ç–∞',
    'fog': '—Ç—É–º–∞–Ω',
    'heavy intensity rain': '—Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å',
}

city_weather_data = {}


# –Ω–∞—á–∞–ª–æ
last_city = ""


@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ–≥–æ–¥—ã. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.")


@bot.message_handler(func=lambda message: message.text.lower() == "–∑–∞–≤—Ç—Ä–∞")
def get_weather_tomorrow(message):
    global last_city
    # –∑–∞–≤—Ç—Ä–∞
    if last_city:
        res = requests.get(f'https://api.openweathermap.org/data/2.5/forecast?q={last_city}&appid={API}&units=metric')

        if res.status_code == 200:
            data = json.loads(res.text)
            tomorrow_weather = data["list"][8]
            temp = tomorrow_weather["main"]["temp"]
            feels_like = tomorrow_weather["main"]["feels_like"]
            weather_description_en = tomorrow_weather["weather"][0]["description"]
            pressure = tomorrow_weather["main"]["pressure"]
            wind_speed = tomorrow_weather["wind"]["speed"]
            humidity = tomorrow_weather["main"]["humidity"]

            # –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤
            weather_description_ru = weather_mapping.get(weather_description_en, weather_description_en)

            # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≥–æ–¥–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞
            weather_info = (f'üå§Ô∏è–ü–æ–≥–æ–¥–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –≤ {last_city.capitalize()}: {weather_description_ru}\n'
                            f'üå°Ô∏è–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n'
                            f'ü§≤–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels_like}¬∞C\n'
                            f'üíß–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n'
                            f'üéà–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–±–∞—Ä\n'
                            f'üçÉ–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/—Å')

            bot.reply_to(message, weather_info)
        else:
            bot.reply_to(message, f'–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É –¥–ª—è {last_city}... ü•∫')
    else:
        bot.reply_to(message, '–í—ã –µ—â–µ –Ω–µ —É–∫–∞–∑–∞–ª–∏ –≥–æ—Ä–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥.')


@bot.message_handler(content_types=['text'])
def get_weather(message):
    global last_city
    city = message.text.strip().lower()
    last_city = city

    # –≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–∑–∞–≤—Ç—Ä–∞"
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    markup.add(types.KeyboardButton("–ó–∞–≤—Ç—Ä–∞"))

    res = requests.get(f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={API}&units=metric')
    if res.status_code == 200:
        data = json.loads(res.text)
        temp = data["main"]["temp"]
        feels_like = data["main"]["feels_like"]
        weather_description_en = data["weather"][0]["description"]
        pressure = data["main"]["pressure"]
        wind_speed = data["wind"]["speed"]
        humidity = data["main"]["humidity"]

        # –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤
        weather_description_ru = weather_mapping.get(weather_description_en, weather_description_en)

        # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≥–æ–¥–µ
        weather_info = (f'üå§Ô∏è–°–µ–π—á–∞—Å –ø–æ–≥–æ–¥–∞: {weather_description_ru}\n'
                        f'üå°Ô∏è–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n'
                        f'ü§≤–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels_like}¬∞C\n'
                        f'üíß–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n'
                        f'üéà–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–±–∞—Ä\n'
                        f'üçÉ–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/—Å')

        image = 'sun.png' if temp > 15.0 else 'cloud.png'
        with open(image, 'rb') as file:
            bot.send_photo(message.chat.id, file, caption=weather_info, reply_markup=markup)
    else:
        bot.reply_to(message, f'–ì–æ—Ä–æ–¥ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ –∏–ª–∏ —è —Ç–∞–∫–æ–π –Ω–µ –∑–Ω–∞—é... ü•∫')


# —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–ª—Å—è
bot.polling(none_stop=True)
